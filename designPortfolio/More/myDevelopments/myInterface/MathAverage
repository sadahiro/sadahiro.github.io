unit MathAverage;	{calculate variable kind of averages}
interface
	const
		CityLimit = 21;	{citylimit is 20, 1 will be reserved for monthly average of 2d array}
	type
		Monthes = (Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec, Ave);
		TempaMatrix = array[1..CityLimit, Monthes] of integer;

	procedure HArrAve2D (var Tempa: TempaMatrix; CityCount: integer);
	procedure VArrAve2D (var Tempa: TempaMatrix; CityCount: integer);

implementation
	procedure HArrAve2D (var Tempa: TempaMatrix; CityCount: integer);
		var
			i: integer;
			j: Monthes;
			Sum: integer;
			CityAve: integer;
			CityAveR: real;
	begin
		for i := 1 to CityCount - 1 do
			begin
				Sum := 0;
				for j := Jan to Dec do
					Sum := Sum + Tempa[i, j];
				CityAveR := Sum / 12;
				CityAve := trunc(CityAveR * 10);
				Tempa[i, Ave] := CityAve
			end
	end;		{end of procedure HArrAve2D}

	procedure VArrAve2D (var Tempa: TempaMatrix; CityCount: integer);
		var
			i: Monthes;
			j: integer;
			Sum: integer;
			MonAve: integer;
			MonAveR: real;
	begin
		for i := Jan to Ave do
			begin
				Sum := 0;
				for j := 1 to CityCount - 1 do
					Sum := Sum + Tempa[j, i];
				MonAveR := Sum / (CityCount - 1);
				MonAve := trunc(MonAveR * 10);
				Tempa[CityCount, i] := MonAve
			end
	end;		{end of procedure VArrAve2D}

end.		{end of unit MathAverage}