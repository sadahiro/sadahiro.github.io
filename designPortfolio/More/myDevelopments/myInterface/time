unit time;
{Programmer:	Makoto Sadahiro }
{starting date: Nov 9th '93}
{last modified date:  Nov 9th '93}

{utilities for converting time}

interface
	{convert Hours to Minutes}
	function ConvertToMin (var number: integer): integer;
{in, out:  number from procedure call}
{pre:integer is in Hours}
{post: integer is in Minutes}

	{convert Minutes to Hours}
	function ConvertToHr (var number: integer): integer;
{in, out:  number from procedure call}
{pre:integer is in Minutes}
{post: integer is in Hours}

	{get the minutes of difference inbetween two different minutes}
	function TimeDifference (var timeIn, timeOut: integer): integer;
{in, out:  number from procedure call in minutes}
{pre:integer is in Minutes}
{****************************************************************}

implementation

	function ConvertToMin (var number: integer): integer;
	begin
		ConvertToMin := (number div 100 * 60) + (number mod 100);
	end;				{convertToMin}
{*****************************}

	function ConvertToHr (var number: integer): integer;
	begin
		ConvertToHr := (number div 60 * 100) + (number mod 60);
	end;				{convertToHr}
{*****************************}

	function TimeDifference (var timeIn, timeOut: integer): integer;
	begin
		if timeOut < timeIn then
			timeOut := timeOut + 1440;
		TimeDifference := timeOut - timeIn;
	end;				{TimeDifference}
{*****************************}

{*************************************}
end.				{time}