unit Xtension;

interface
	procedure CharPitalize (var Moji: char);
{makes lower case to upper case}
	procedure LongWord (var LstWord: str255; var LstNum: integer; var Moji: char; var NWord: integer; var Word: str255);


implementation
	procedure CharPitalize (var Moji: char);
	begin
		case Moji of
			'a': 
				Moji := 'A';
			'b': 
				Moji := 'B';
			'c': 
				Moji := 'C';
			'd': 
				Moji := 'D';
			'e': 
				Moji := 'E';
			'f': 
				Moji := 'F';
			'g': 
				Moji := 'G';
			'h': 
				Moji := 'H';
			'i': 
				Moji := 'I';
			'j': 
				Moji := 'J';
			'k': 
				Moji := 'K';
			'l': 
				Moji := 'L';
			'm': 
				Moji := 'M';
			'n': 
				Moji := 'N';
			'o': 
				Moji := 'O';
			'p': 
				Moji := 'P';
			'q': 
				Moji := 'Q';
			'r': 
				Moji := 'R';
			's': 
				Moji := 'S';
			't': 
				Moji := 'T';
			'u': 
				Moji := 'U';
			'v': 
				Moji := 'V';
			'w': 
				Moji := 'W';
			'x': 
				Moji := 'X';
			'y': 
				Moji := 'Y';
			'z': 
				Moji := 'Z'
		end
	end;				{end of procedure CharPitalize}

{**************************************************}

	procedure LongWord (var LstWord: str255; var LstNum: integer; var Moji: char; var NWord: integer; var Word: str255);
	begin
		if Moji in ['A'..'Z', 'a'..'z', '0'..'9'] then
			begin
				Word := concat(Word, Moji);
				NWord := NWord + 1;
			end
		else
			begin
				Word := '';
				NWord := 0
			end;
		if NWord > LstNum then
			begin
				LstWord := Word;
				LstNum := NWord
			end
	end;				{end of procedure LongWord}
{************************************************}

end.				{end of unit Xtension}