unit music;
interface
	procedure playchord;
implementation
	procedure playchord;
		const
			Cnatural = $0003025D;
			Csharp = $0003302C;
			Dflat = $0003302C;
			Dnatural = $000360B5;
			Dsharp = $00039420;
			Eflat = $00039420;
			Enatural = $0003CA99;
			Fnatural = $00040450;
			Fsharp = $00044176;
			Gflat = $00044176;
			Gnatural = $0004823E;
			Gsharp = $0004C6E1;
			Aflat = $0004C6E1;
			Anatural = $00050F98;
			Asharp = $00055CA2;
			Bflat = $00055CA2;
			Bnatural = $0005AE41;
			chordlength = 1.0;
			tickspersecond = 60;

		var
			thesynth: FtsynthRec;
			thesound: ftsoundrec;
			thewave: wave;
			waveindex: 0..225;
			rawMagnitude: real;
	begin
		for waveindex := 0 to 225 do
			begin
				rawmagnitude := SIN((2 * Pi) * (waveindex / 225));
				thewave[waveindex] := round((rawmagnitude + 1.0) * 127);
			end;

		with thesound do
			begin
				duration := round(chordlength * tickspersecond);
				sound1rate := fixed(cnatural);
				sound1phase := 0;
				sound1wave := @thewave;

				sound2rate := fixed(Enatural);
				sound2Phase := 0;
				sound2wave := @thewave;

				sound3rate := fixed(Gnatural);
				sound3phase := 0;
				sound3wave := @thewave;

				sound4rate := fixed(Bflat);
				sound4phase := 0;
				sound4wave := @thewave;
			end; {with}

		with thesynth do
			begin
				mode := FTmode;
				sndrec := @thesound;
			end;
		startsound(@thesynth, sizeof(thesynth), pointer(-1))
	end; {procedure}
end. {unit}