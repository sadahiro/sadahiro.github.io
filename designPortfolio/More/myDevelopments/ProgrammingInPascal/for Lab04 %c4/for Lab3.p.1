{units converter_____lab 04}
{programmer:	Makoto Sadahiro}
{This program is written for the class of cis-111	computer programing in pascal in section -03}
{instructor:	Prof. Zeller}
{due date:	friday, feb 19th '93}

{puropse:  is converting input data to another units and getting the solution of the area of circle}
{	with the radius as the value of user's input}

{input:  inches, choice:  integer:  making_sure:  
program Lab4_ver_112;

{procedure for showing menu}
	procedure show_menu;
	begin
		writeln('unit converter menu');
		writeln('you have 3 choices plus 1 choice');
		writeln('		1-convert to yards, feet, inches');
		writeln('		2-convert to centimeters');
		writeln('		3-area of circle from your input of radius');
		writeln('					this only culculates positive integers');
		writeln('			the largest integer accepted is ', maxint);
		writeln('			4-quit the program');
		writeln('What number is your choice?');
		writeln
	end;

{procedure for getting choice from menu }
	procedure get_choice (var choice: integer);
	begin
		readln(choice);
		if (choice = 1) then
			writeln('you chose option-1 converting inches to yards, feet, inches');
		if (choice = 2) then
			writeln('you chose option-2 converting inches to centimeters');
		if (choice = 3) then
			writeln('you chose option-3 converting inches to area of circle');
		if (choice = 4) then
			writeln('you chose option-4 quitting the program');
	end;

{procedure for seeing if it is valid imput}
	procedure see_valid (var inchin: integer; sure: char);
	begin
		if (inchin <= maxint) then
			begin
				if (inchin < 0) then
					begin
						writeln('you typen negative input');
						sure := 'f'
					end
				else
			end
		else
			writeln('your input is too large');
		writeln('say y with your responsibility');
		sure := 'f'
	end;

{procedure for getting input in inches}
	procedure get_inchin (var inchin: integer);
		var
			sure: char;

	begin
		while (sure <> 'y') and (sure <> 'Y') do
			begin
				writeln('typein positive integer');
				readln(inchin);
				see_valid(inchin, sure);
				if (sure <> 'f') then
					begin
						writeln('you typed in ', inchin);
						writeln('are you sure?  -y or n-');
						readln(sure)
					end
				else
					writeln('try it again')
			end
	end;

{procedure for option_1}
	procedure option_1;
		var
			inchin: integer;

	begin
		get_inchin(inchin);
		if (inchin >= 0) then
			begin
				writeln('the converted value is ');
				writeln('                                 ', (inchin div 36) : 0, ' yards');
				writeln('                                 ', (inchin mod 36 div 12) : 0, ' feet');
				writeln('                                 ', (inchin mod 36 mod 12) : 0, ' inches');
				writeln
			end
		else
			begin
				writeln('I told you i can only convert valid data!');
				writeln
			end
	end;										{end option_1}

{procedure for option_2}
	procedure option_2;
		var
			inchin: integer;

	begin
		get_inchin(inchin);
		if (inchin >= 0) then
			begin
				writeln('the converted value is ');
				writeln('                            ', ((trunc(inchin * 2.54)) div 100), ' meters');
				writeln('                            ', (((trunc(inchin * 2.54)) mod 100) + ((inchin * 2.54) - (trunc(inchin * 2.54)))) : 0 : 3, ' centimeters');
				writeln((inchin * 2.54) : 0 : 3);
				writeln
			end
		else
			begin
				writeln('I told you i can only convert valid data!');
				writeln
			end
	end;										{end option_2}

{procedure for option_3}
	procedure option_3;
		var
			inchin: integer;

	begin
		get_inchin(inchin);
		if (inchin >= 0) then
			begin
				writeln('the area of circle is ', (inchin * inchin * pi) : 0 : 3, ' square inches');
				writeln
			end
		else
			begin
				writeln('I told you i can only convert valid data!');
				writeln
			end
	end;										{end option_3}


{showing the quitting annuncement to user}
	procedure show_quit;
	begin
		writeln('quitting execution,  return let you go back to TP screen');
	end;


{beginning of main program}
	var
		choice: integer;

begin
	while (choice <> 4) do
		begin
			show_menu;
			get_choice(choice);
			if (choice = 1) then
				option_1;
			if (choice = 2) then
				option_2;
			if (choice = 3) then
				option_3;
		end;
	show_quit
end.